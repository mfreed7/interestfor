!function(){let e="interesttarget",t="interest",r="loseinterest";if(window.interesttargetPolyfillInstalled)return;window.interesttargetPolyfillInstalled=!0;let a=HTMLButtonElement.prototype.hasOwnProperty("interestTargetElement");if(a&&!window.interesttargetUsePolyfillAlways)return;if(a&&window.interesttargetUsePolyfillAlways){let s=e=>{e.isTrusted&&(e.preventDefault(),e.stopImmediatePropagation())};document.body.addEventListener(t,s,{capture:!0}),document.body.addEventListener(r,s,{capture:!0})}function i(e,t){if(t=t??"Assertion failed",!e)throw t}function l(e){return new InterestEvent(e,{bubbles:!1,cancelable:!0,composed:!0})}window.InterestEvent=class extends CustomEvent{};let o="polyfill_data";function d(e){let r=e[o].target;if(r.dispatchEvent(l(t))){e[o].has_interest=!0;try{r.showPopover()}catch{}}}function u(e){let t=e[o].target;if(t.dispatchEvent(l(r))){e[o].has_interest=!1;try{t.hidePopover()}catch{}}}function y(t){var r;i(t.hasAttribute(e));let a=t.getAttribute(e);if(i(a),i(!(r=t.hasOwnProperty(o)),void 0),t[o]={},t[o].target=document.getElementById(a),!t[o].target)return;let s=new AbortController;t[o].signal=s.signal,t.addEventListener("mouseenter",()=>{var e,r;e=t,r=getComputedStyle(t).getPropertyValue("--interest-target-show-delay"),clearTimeout(e[o].hideInterestTask),e[o].showInterestTask=setTimeout(()=>{d(e)},1e3*r)},{signal:s.signal}),t.addEventListener("mouseleave",()=>{var e,r;e=t,r=getComputedStyle(t).getPropertyValue("--interest-target-hide-delay"),clearTimeout(e[o].showInterestTask),e[o].hideInterestTask=setTimeout(()=>{u(e)},1e3*r)},{signal:s.signal}),t.addEventListener("keydown",e=>{"ArrowUp"===e.key&&e.altKey&&d(t),"Escape"===e.key&&u(t)},{signal:s.signal})}function c(e){e[o]?.signal?.abort()}function h(){document[o].globalStylesheet?.remove(),delete document[o].globalStylesheet,document[o].observer.disconnect(),delete document[o]}!function t(){i(void 0===document[o]),document[o]={},function e(){let t=document.createElement("style");t.innerHTML=`
      @property --interest-target-hide-delay {
        syntax: "<time>";
        inherits: false;
        initial-value: 0.5s;
      }
      @property --interest-target-show-delay {
        syntax: "<time>";
        inherits: false;
        initial-value: 0.5s;
      }
    `,document.head.appendChild(t),document[o].globalStylesheet=t}(),document[o].observer=new MutationObserver(t=>{t.forEach(function(t){switch(t.target,t.type){case"childList":t.removedNodes.forEach(e=>{c(e)}),t.addedNodes.forEach(t=>{t.nodeType===Node.ELEMENT_NODE&&t.hasAttribute(e)&&y(t)});break;case"attributes":i(t.attributeName==e),c(n),n.hasAttribute(e)&&y(n);break;default:i(!1,"mutation type")}})});let r=document.createTreeWalker(document.body,NodeFilter.SHOW_ELEMENT,t=>t.hasAttribute(e)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP),a;for(;a=r.nextNode();)y(a);document[o].observer.observe(document.body,{childList:!0,subtree:!0,attributeFilter:[e]})}(),console.log(`interesttarget polyfill installed (native feature: ${a?"supported":"not present"}).`)}();
